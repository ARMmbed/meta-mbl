diff --git a/meta/recipes-core/initscripts/initscripts-1.0/umountfs b/meta/recipes-core/initscripts/initscripts-1.0/umountfs
index 7fb5c58..a453ee2 100755
--- a/meta/recipes-core/initscripts/initscripts-1.0/umountfs
+++ b/meta/recipes-core/initscripts/initscripts-1.0/umountfs
@@ -19,6 +19,24 @@ echo "Unmounting local filesystems..."
 grep -q /mnt/ram /proc/mounts && mount -o remount,ro /mnt/ram
 mount -o remount,ro /
 
+# Few points about why we need to remount all read/write partitions to be 
+# read-only before the umount command:
+# We observed, that during the gracefull reboot procedure, <recovery complete> 
+# warnings might appear in the boot sequence log. We believe that this warning 
+# points on some kind of instability of the filesystem. 
+# We observed, that the remounting of the read/write partition to be read-only 
+# before umount avoids the warning printout from the mount command. 
+# We don't really understand the root cause of the <recovery complete> 
+# warning and don't have the exact explanation why this workaround works. 
+# The original umount script contains the following line:
+# 'mount -o remount,ro /' 
+# from the initial commit. We extended the remounting of all the read/write 
+# partitions to read-only.
+#
+# 1. chose from 'mount' output all mounts that have 'ext4' on the 5'th position and 'rw' attribute on the 6'th position.
+# 2. remount these partitions to be read-only.
+mount | awk '$5 == "ext4" && $6 ~ "[(,]rw[),]" {print $3}' | xargs -t -I % mount -o remount,ro %
+
 umount -f -a -r > /dev/null 2>&1
 
 : exit 0
