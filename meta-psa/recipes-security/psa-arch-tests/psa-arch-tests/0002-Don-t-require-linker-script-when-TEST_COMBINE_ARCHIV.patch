From 11c61ae8dbe1d9a7239438df0a3c281cc8f89f32 Mon Sep 17 00:00:00 2001
From: Jonathan Haigh <jonathan.haigh@arm.com>
Date: Wed, 26 Jun 2019 08:58:05 +0100
Subject: [PATCH 2/5] Don't require linker script when TEST_COMBINE_ARCHIVE is
 set

We only need a linker script when we're creating a combined test binary,
not when creating libraries so:

tools/makefiles/Makefile:
* Don't run the gen_linker recipe when TEST_COMBINE_ARCHIVE is set.
* gen_linker runs an mkdir command that is required even when not using
  a linker script, so move that mkdir and others into a new "mkdir"
  target that will always run.

tools/makefiles/testbuild.mk:
* We don't need to generate test elfs if we're not going to combine them
  into a combined test binary so skip the test.elf target when
  TEST_COMBINE_ARCHIVE is set.
---
 api-tests/tools/makefiles/Makefile     | 8 +++++---
 api-tests/tools/makefiles/testbuild.mk | 4 +++-
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/api-tests/tools/makefiles/Makefile b/api-tests/tools/makefiles/Makefile
index 6c87c91..b971c85 100644
--- a/api-tests/tools/makefiles/Makefile
+++ b/api-tests/tools/makefiles/Makefile
@@ -25,14 +25,15 @@ export SUITE_OUT= $(BUILD)/$(SUITE_DIR)
 
 include $(SOURCE)/tools/makefiles/toolchain.mk
 
+all: clean mkdir target_cfg gen_linker process_testsuite.db build
 
-all: clean target_cfg gen_linker process_testsuite.db build
+mkdir:
+	mkdir -p $(BUILD)/platform/${TARGET} $(SUITE_OUT) $(BUILD)/val $(BUILD)/partition
 
 #Generate target files from User provided data base
 target_cfg:
 	@echo  ""
 	@echo  "Processing target configuration..."
-	mkdir -p $(BUILD)/platform/${TARGET}/
 	@if [ ! -f "$(SOURCE)/platform/targets/$(TARGET)/target.cfg" ]; then { echo "Error: Target Not Found!!!"; exit 1; } fi
 	python $(SOURCE)/tools/scripts/targetConfigGen.py ${TARGET} $(SOURCE)/val/common/val_target.h \
 	$(SOURCE)/platform/targets/${TARGET}/target.cfg $(BUILD)/platform/${TARGET}/targetConfigGen.c \
@@ -43,10 +44,11 @@ target_cfg:
 
 #Read target.cfg and update the addresses in linker script
 gen_linker:
+ifneq (${TEST_COMBINE_ARCHIVE}, 1)
 	@echo  ""
 	@echo  "Updating linker files..."
-	mkdir -p $(SUITE_OUT)/ $(BUILD)/val/ $(BUILD)/partition/ ;
 	perl $(SOURCE)/tools/scripts/process_test_linker_file.pl $(SOURCE) $(SUITE_OUT) ${TARGET} $(TOOLCHAIN)
+endif
 
 process_testsuite.db:
 	@echo  ""
diff --git a/api-tests/tools/makefiles/testbuild.mk b/api-tests/tools/makefiles/testbuild.mk
index 373111d..21c874a 100644
--- a/api-tests/tools/makefiles/testbuild.mk
+++ b/api-tests/tools/makefiles/testbuild.mk
@@ -69,10 +69,12 @@ $(SUITE_OUT)/$(TEST)/%_spe.o : %.s
 	$(AS) -o $@ $<
 
 test.elf:
+ifneq (${TEST_COMBINE_ARCHIVE}, 1)
 ifeq (${TOOLCHAIN}, GNUARM)
 	$(LD) -Xlinker -Map=$(SUITE_OUT)/$(TEST)/test.map -o $(SUITE_OUT)/$(TEST)/test.elf -T$(SUITE_OUT)/.test.linker $(SUITE_OUT)/$(TEST)/*_nspe.o
 else
 	$(LD)  --scatter=$(SUITE_OUT)/.test.sct  --list=$(SUITE_OUT)/$(TEST)/test.map -o $(SUITE_OUT)/$(TEST)/test.elf  $(SUITE_OUT)/$(TEST)/*_nspe.o
-endif
+endif # TOOLCHAIN
 	$(DS)  $(SUITE_OUT)/$(TEST)/test.elf >  $(SUITE_OUT)/$(TEST)/test.disass
+endif # TEST_COMBINE_ARCHIVE
 
-- 
2.7.4

