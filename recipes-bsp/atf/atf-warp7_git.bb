# Copyright (c) 2018 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: MIT

PROVIDES += "virtual/atf"

DEPENDS_append = " u-boot-tools-native"

SRC_URI = "git://git.linaro.org/landing-teams/working/mbl/arm-trusted-firmware.git;protocol=https;nobranch=1;name=atf"
SRCREV_atf = "8a9f3e55ce939f1b2646e044de5eb804437f057f"

SRC_URI_append +="file://u-boot.cfgout.warp7;name=uboot.cfgout;"
SRCREV_uboot.cfgout="6bb815da1bc986dc717a59cc6d2552f8"

require atf.inc

# Notes on uboot.cfgout
# This is a file automatically generated by u-boot when compiling up a warp7
# image. uboot.cfgout is a necessary input when generating a .imx image
# To regenerate uboot.cfgout just do
# "make warp7_config;make u-boot.imx CROSS_COMPILE=your-x-compiler-"

LICENSE-uboot.cfgout = "GPLv2"

PLATFORM = "warp7"
MBL_UNIFIED_BIN = "atf-bl2-fip.bin"

ATF_COMPILE_FLAGS_append = " \
      AARCH32_SP=optee \
      ARCH=aarch32 \
      ARM_ARCH_MAJOR=7 \
      ARM_CORTEX_A7=yes \
      CROSS_COMPILE=${TARGET_PREFIX} \
      NEED_BL2=yes \
      HW_CONFIG=${DEPLOY_DIR_IMAGE}/${KERNEL_DEVICETREE} \
"

do_compile_append() {

    # Get the entry point
    ENTRY=`${HOST_PREFIX}readelf ${B}/${PLATFORM}/bl2/bl2.elf -h | grep "Entry" | awk '{print $4}'`

    # Generate the .imx binary
    uboot-mkimage -n ${WORKDIR}/u-boot.cfgout.warp7 -T imximage -e ${ENTRY} -d ${B}/${PLATFORM}/bl2.bin ${B}/${PLATFORM}/bl2.bin.imx

    # Create signed FIP image.
    oe_runmake ${ATF_COMPILE_FLAGS} BL2=${B}/${PLATFORM}/bl2.bin BL2_AT_EL3=0 fip

    # Unify FIP and ATF into one binary
    FIP_SIZE=$(stat -c %s ${B}/${PLATFORM}/${FIP_BIN})
    dd if=/dev/zero of=${B}/${PLATFORM}/${MBL_UNIFIED_BIN} count=$(expr 32 \* 1024 \+ ${FIP_SIZE}) bs=1
    dd if=${B}/${PLATFORM}/bl2.bin.imx of=${B}/${PLATFORM}/${MBL_UNIFIED_BIN}
    # the packed image is burned to 1KB offset, so 1MB is shift to 1023KB in image
    dd if=${B}/${PLATFORM}/${FIP_BIN} of=${B}/${PLATFORM}/${MBL_UNIFIED_BIN} bs=1024 seek=1023
}
