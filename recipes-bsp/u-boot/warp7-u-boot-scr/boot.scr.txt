setenv mmcpart 2
setenv uuidpart 0:2
setenv optee_file /lib/firmware/uTee.optee
setenv image_signed /boot/zImage.imx-signed
setenv fdt_file_signed /boot/imx7s-warp.dtb.imx-signed
setenv optee_file_signed /lib/firmware/uTee.optee.imx-signed
setenv loadoptee "${loadcmd} mmc ${mmcdev}:${mmcpart} ${optee_addr} ${optee_file}"
# This section is responsbile for loading a signed Linux kernel
if test ${hab_enabled} -eq 1; then
	hab_get_ivt_addr ${loadaddr} ${ivt_offset}
	${loadcmd} mmc ${mmcdev}:${mmcpart} ${hab_ivt_addr} ${image_signed}
	run warp7_auth_or_fail
else
	run loadimage;
fi
# This section is responsbile for loading a signed FDT image
if test ${hab_enabled} -eq 1; then
	hab_get_ivt_addr ${fdt_addr} ${ivt_offset}
	${loadcmd} mmc ${mmcdev}:${mmcpart} ${hab_ivt_addr} ${fdt_file_signed}
	run warp7_auth_or_fail
else
	run loadfdt;
fi
# This section is responsbile for loading a signed OPTEE image
if test ${hab_enabled} -eq 1; then
	hab_get_ivt_addr ${optee_addr} ${ivt_offset}
	${loadcmd} mmc ${mmcdev}:${mmcpart} ${hab_ivt_addr} ${optee_file_signed}
	run warp7_auth_or_fail
else
	run loadoptee;
fi
# Now boot
echo Booting secure Linux/OPTEE OS from mmc ...;
run finduuid;
run mmcargs;
bootm ${optee_addr} - ${fdt_addr};
# Failsafe if something goes wrong
hab_failsafe
