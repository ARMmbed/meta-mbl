# Copyright (c) 2018-2019 Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause

# Note: don't specify mount points and "on-device" options - if we do that then
# WIC will try to add the devices to fstab, but it will only add them to fstab
# in the final wic image, not the rootfs images. That would be a problem for us
# because we use the rootfs images as payload files for firmware update. We
# just deal with fstab manually to avoid this.

# First space for a bootloader (single bank)
# Typically used for TF-A BL2
${MBL_WKS_BOOTLOADER1_COMMENT_IF_SKIP}part --source rawcopy --sourceparams="file=${MBL_WKS_BOOTLOADER1_FILENAME}" --no-table --align ${MBL_WKS_BOOTLOADER1_OFFSET_BANK1_KiB}

# Second space for a bootloader (two banks)
# Typically two banks of FIP image containing TF-A BL3, OP-TEE and U-Boot.
# We don't say anything about the size or second bank here - instead, we set
# the --align of the next partition so that it doesn't overlap
${MBL_WKS_BOOTLOADER2_COMMENT_IF_SKIP}part --source rawcopy --sourceparams="file=${MBL_WKS_BOOTLOADER2_FILENAME}" --no-table --align ${MBL_WKS_BOOTLOADER2_OFFSET_BANK1_KiB}

# Third space for a bootloader (single bank)
# Typically this partition is not used. It is used on e.g. Raspberry Pi 3 to
# store the VC4 firmware and BL2.
${MBL_WKS_BOOTLOADER_FS_COMMENT_IF_SKIP}part --source bootimg-partition --fstype=${MBL_WKS_BOOTLOADER_FS_FSTYPE} --label ${MBL_WKS_BOOTLOADER_FS_LABEL} --align ${MBL_WKS_BOOTLOADER_FS_OFFSET_BANK1_KiB} --fixed-size ${MBL_WKS_BOOTLOADER_FS_SIZE_MiB}

# Boot partition (two banks)
${MBL_BOOT_COMMENT_IF_SKIP}part --source bootimg-partition --fstype=${MBL_BOOT_FSTYPE} --label ${MBL_BOOT_LABEL}1 --align ${MBL_BOOT_OFFSET_BANK1_KiB} --fixed-size ${MBL_BOOT_SIZE_MiB}
${MBL_BOOT_COMMENT_IF_SKIP}part --fstype=${MBL_BOOT_FSTYPE} --label ${MBL_BOOT_LABEL}2 --align ${MBL_BOOT_OFFSET_BANK2_KiB} --fixed-size ${MBL_BOOT_SIZE_MiB}

# Root partition (two banks)
# Root partitions have no label because our rootfs update payload is an ext4
# image, and when we create the image we don't know which bank it will end up
# in so we can't set a bank-specific label when creating the ext4 image.
${MBL_ROOT_COMMENT_IF_SKIP}part --source rootfs --fstype=${MBL_ROOT_FSTYPE} --align ${MBL_ROOT_OFFSET_BANK1_KiB} --fixed-size ${MBL_ROOT_SIZE_MiB} --exclude-path ${MBL_WKS_ROOT_EXCLUDE_PATHS}
${MBL_ROOT_COMMENT_IF_SKIP}part --align ${MBL_ROOT_OFFSET_BANK2_KiB} --fixed-size ${MBL_ROOT_SIZE_MiB}

# Factory config partition
${MBL_FACTORY_CONFIG_COMMENT_IF_SKIP}part --source rootfs-subdir --sourceparams subdir=${MBL_FACTORY_CONFIG_MOUNT_POINT} --fstype=${MBL_FACTORY_CONFIG_FSTYPE} --label ${MBL_FACTORY_CONFIG_LABEL} --align ${MBL_FACTORY_CONFIG_OFFSET_BANK1_KiB} --fixed-size ${MBL_FACTORY_CONFIG_SIZE_MiB}

# Config partition (two banks)
${MBL_CONFIG_COMMENT_IF_SKIP}part --source rootfs-subdir --sourceparams subdir=${MBL_CONFIG_MOUNT_POINT} --fstype=${MBL_CONFIG_FSTYPE} --label ${MBL_CONFIG_LABEL}1 --align ${MBL_CONFIG_OFFSET_BANK1_KiB} --fixed-size ${MBL_CONFIG_SIZE_MiB}
${MBL_CONFIG_COMMENT_IF_SKIP}part --fstype=${MBL_CONFIG_FSTYPE} --label ${MBL_CONFIG_LABEL}2 --align ${MBL_CONFIG_OFFSET_BANK2_KiB} --fixed-size ${MBL_CONFIG_SIZE_MiB}

# Log partition
${MBL_LOG_COMMENT_IF_SKIP}part --source rootfs-subdir --sourceparams subdir=${MBL_LOG_MOUNT_POINT} --fstype=${MBL_LOG_FSTYPE} --label ${MBL_LOG_LABEL} --align ${MBL_LOG_OFFSET_BANK1_KiB} --fixed-size ${MBL_LOG_SIZE_MiB}

# Scratch partition
${MBL_SCRATCH_COMMENT_IF_SKIP}part --source rootfs-subdir --sourceparams subdir=${MBL_SCRATCH_MOUNT_POINT} --fstype=${MBL_SCRATCH_FSTYPE} --label ${MBL_SCRATCH_LABEL} --align ${MBL_SCRATCH_OFFSET_BANK1_KiB} --fixed-size ${MBL_SCRATCH_SIZE_MiB}

# Home partition
${MBL_HOME_COMMENT_IF_SKIP}part --source rootfs-subdir --sourceparams subdir=${MBL_HOME_MOUNT_POINT} --fstype=${MBL_HOME_FSTYPE} --label ${MBL_HOME_LABEL} --align ${MBL_HOME_OFFSET_BANK1_KiB} --fixed-size ${MBL_HOME_SIZE_MiB}

bootloader --ptable msdos
